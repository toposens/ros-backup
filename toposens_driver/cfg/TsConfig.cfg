#!/usr/bin/env python
PACKAGE = "toposens_driver"
NODE_NAME = "toposens_node"
PARAMS_NAME = "Ts"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# only core commands are sent on init
gen.add("sig_strength", int_t, 0, "COMMENT THIS", 8, 0, 20)
gen.add("filter_size", int_t, 1, "COMMENT THIS", 20, 1, 100)
gen.add("noise_thresh", int_t, 2, "COMMENT THIS", 5, 0, 20)

  # Ex command: CgoLim-200002000-0500050000020002000
vxl = gen.add_group("voxel")
# In centimeters
# ros x-axis is ts z-axis
vxl.add("x_min", int_t, 6, "COMMENT THIS", 0, 0, 500)
vxl.add("x_max", int_t, 7, "COMMENT THIS", 300, 0, 500)
# ros y-axis is ts minus x-axis
vxl.add("y_min", int_t, 8, "COMMENT THIS", -200, -500, 0)
vxl.add("y_max", int_t, 9, "COMMENT THIS", 200, 0, 500)
# ros z-axis is ts y-axis
vxl.add("z_min", int_t, 10, "COMMENT THIS", -200, -500, 0)
vxl.add("z_max", int_t, 11, "COMMENT THIS", 200, 0, 500)


# to boost SNR (signal to noise ratio) around detected events
# bst_near -> slop1; bst_mid -> slop2; bst_long -> slop3
# divides sensing range into approx 3 equal parts and
# applies the three boosters to corresponding sub-ranges
# 3 different values so farther off points (weaker echos)
# are not taken as noise compared to closer echos
bst = gen.add_group("booster")
bst.add("short_range", int_t, 3, "COMMENT THIS", 500, 0, 1000)
bst.add("mid_range", int_t, 4, "COMMENT THIS", 200, 0, 1000)
bst.add("long_range", int_t, 5, "COMMENT THIS", 50, 0, 1000)

exit(gen.generate(PACKAGE, NODE_NAME, PARAMS_NAME))


# Make sure this file is given eexecution privleges
# chmod a+x cfg/Ts.cfg