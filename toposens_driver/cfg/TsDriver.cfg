#!/usr/bin/env python
PACKAGE = "toposens_driver"
NODE_NAME = "toposens_driver_node"
PARAMS_NAME = "TsDriver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# only core commands are sent on init
gen.add("sig_strength", int_t, 0, "Number of waves emitted in every transmission cycle", 5, 0, 20)
gen.add("filter_size", int_t, 1, "Kernel size applied on ADC signals for edge detection", 20, 1, 100)
gen.add("noise_thresh", int_t, 2, "Minimum amplitude for an echo to be considered valid", 5, 0, 20)

# to boost SNR (signal to noise ratio) around detected events
# bst_near -> boost;

bst = gen.add_group("snr_boost")
bst.add("boost_near", int_t, 3, "Short-range SNR booster for first third of x-range", 500, 0, 1000)

# Ex command: CgoLim-200002000-0500050000020002000
vxl = gen.add_group("voxel")
# In centimeters
# ros x-axis is ts z-axis
vxl.add("x_min", int_t, 6, "Lower x-limit for the volume of interest", 0, 0, 500)
vxl.add("x_max", int_t, 7, "Upper x-limit for the volume of interest", 300, 0, 500)
# ros y-axis is ts minus x-axis
vxl.add("y_min", int_t, 8, "Lower y-limit for the volume of interest", -200, -500, 0)
vxl.add("y_max", int_t, 9, "Upper y-limit for the volume of interest", 200, 0, 500)
# ros z-axis is ts y-axis
vxl.add("z_min", int_t, 10, "Lower z-limit for the volume of interest", -200, -500, 0)
vxl.add("z_max", int_t, 11, "Upper z-limit for the volume of interest", 200, 0, 500)


exit(gen.generate(PACKAGE, NODE_NAME, PARAMS_NAME))


# Make sure this file is given execution privleges
# chmod a+x cfg/Ts*.cfg
